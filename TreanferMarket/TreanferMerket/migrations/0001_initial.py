# Generated by Django 5.2.2 on 2025-06-15 13:41

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BidStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Название статуса')),
            ],
            options={
                'verbose_name': 'Статус ставки',
                'verbose_name_plural': 'Статусы ставок',
            },
        ),
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Название лиги')),
                ('country', models.CharField(blank=True, max_length=50, null=True, verbose_name='Страна лиги')),
                ('logo_url', models.URLField(blank=True, max_length=255, null=True, verbose_name='Логотип лиги')),
            ],
            options={
                'verbose_name': 'Лига',
                'verbose_name_plural': 'Лиги',
            },
        ),
        migrations.CreateModel(
            name='ListingStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Название статуса')),
            ],
            options={
                'verbose_name': 'Статус листинга',
                'verbose_name_plural': 'Статусы листингов',
            },
        ),
        migrations.CreateModel(
            name='Nation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название страны')),
                ('flag_image_url', models.URLField(blank=True, max_length=255, null=True, verbose_name='Флаг страны')),
            ],
            options={
                'verbose_name': 'Страна',
                'verbose_name_plural': 'Страны',
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=3, verbose_name='Код позиции')),
                ('name', models.CharField(max_length=30, verbose_name='Название позиции')),
            ],
            options={
                'verbose_name': 'Позиция',
                'verbose_name_plural': 'Позиции',
            },
        ),
        migrations.CreateModel(
            name='RewardType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Тип награды')),
            ],
            options={
                'verbose_name': 'Тип награды',
                'verbose_name_plural': 'Типы наград',
            },
        ),
        migrations.CreateModel(
            name='SBCDifficulty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Название сложности')),
            ],
            options={
                'verbose_name': 'Сложность SBC',
                'verbose_name_plural': 'Сложности SBC',
            },
        ),
        migrations.CreateModel(
            name='TransactionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Название типа')),
            ],
            options={
                'verbose_name': 'Тип транзакции',
                'verbose_name_plural': 'Типы транзакций',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('coins', models.PositiveIntegerField(default=0, verbose_name='Монеты')),
                ('club_name', models.CharField(blank=True, max_length=50, verbose_name='Название клуба')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата регистрации')),
                ('groups', models.ManyToManyField(blank=True, help_text='Группы, к которым принадлежит пользователь.', related_name='custom_user_groups', to='auth.group', verbose_name='группы')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Конкретные разрешения для этого пользователя.', related_name='custom_user_permissions', to='auth.permission', verbose_name='разрешения пользователя')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Club',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Название клуба')),
                ('logo_url', models.URLField(blank=True, max_length=255, null=True, verbose_name='Логотип клуба')),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='TreanferMerket.league', verbose_name='Лига')),
            ],
            options={
                'verbose_name': 'Клуб',
                'verbose_name_plural': 'Клубы',
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Имя игрока')),
                ('position', models.CharField(max_length=50, verbose_name='Позиция')),
                ('overall_rating', models.PositiveSmallIntegerField(verbose_name='Общий рейтинг')),
                ('base_price', models.PositiveIntegerField(verbose_name='Базовая цена')),
                ('rare', models.BooleanField(default=False, verbose_name='Редкий игрок')),
                ('image_url', models.URLField(blank=True, max_length=255, null=True, verbose_name='Фото игрока')),
                ('image_file', models.ImageField(blank=True, null=True, upload_to='players/', verbose_name='Загруженное фото')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('club', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='TreanferMerket.club', verbose_name='Клуб')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_players', to=settings.AUTH_USER_MODEL, verbose_name='Создано пользователем')),
                ('nation', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='TreanferMerket.nation', verbose_name='Страна')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owned_players', to=settings.AUTH_USER_MODEL, verbose_name='Владелец')),
            ],
            options={
                'verbose_name': 'Игрок',
                'verbose_name_plural': 'Игроки',
            },
        ),
        migrations.CreateModel(
            name='PlayerStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pace', models.PositiveSmallIntegerField(verbose_name='Скорость')),
                ('shooting', models.PositiveSmallIntegerField(verbose_name='Удары')),
                ('passing', models.PositiveSmallIntegerField(verbose_name='Передачи')),
                ('dribbling', models.PositiveSmallIntegerField(verbose_name='Дриблинг')),
                ('defending', models.PositiveSmallIntegerField(verbose_name='Защита')),
                ('physicality', models.PositiveSmallIntegerField(verbose_name='Физика')),
                ('weak_foot', models.PositiveSmallIntegerField(verbose_name='Слабая нога')),
                ('skill_moves', models.PositiveSmallIntegerField(verbose_name='Финты')),
                ('player', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='stats', to='TreanferMerket.player', verbose_name='Игрок')),
            ],
            options={
                'verbose_name': 'Характеристика игрока',
                'verbose_name_plural': 'Характеристики игроков',
            },
        ),
        migrations.CreateModel(
            name='SBC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название SBC')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('expiry_date', models.DateTimeField(verbose_name='Дата окончания')),
                ('is_repeatable', models.BooleanField(default=False, verbose_name='Повторяемый')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('difficulty', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='TreanferMerket.sbcdifficulty', verbose_name='Сложность')),
            ],
            options={
                'verbose_name': 'SBC',
                'verbose_name_plural': 'SBC',
            },
        ),
        migrations.CreateModel(
            name='SBCRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_rating', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Мин. рейтинг')),
                ('max_players', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Макс. игроков')),
                ('club', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='TreanferMerket.club', verbose_name='Клуб')),
                ('league', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='TreanferMerket.league', verbose_name='Лига')),
                ('nation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='TreanferMerket.nation', verbose_name='Нация')),
                ('sbc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requirements', to='TreanferMerket.sbc', verbose_name='SBC')),
            ],
            options={
                'verbose_name': 'Требование SBC',
                'verbose_name_plural': 'Требования SBC',
            },
        ),
        migrations.CreateModel(
            name='SBCReward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.PositiveIntegerField(verbose_name='Значение')),
                ('probability', models.FloatField(default=1.0, verbose_name='Вероятность')),
                ('reward_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='TreanferMerket.rewardtype', verbose_name='Тип награды')),
                ('sbc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rewards', to='TreanferMerket.sbc', verbose_name='SBC')),
            ],
            options={
                'verbose_name': 'Награда SBC',
                'verbose_name_plural': 'Награды SBC',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.PositiveIntegerField(verbose_name='Сумма')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата транзакции')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='TreanferMerket.player', verbose_name='Игрок')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='TreanferMerket.transactiontype', verbose_name='Тип')),
            ],
            options={
                'verbose_name': 'Транзакция',
                'verbose_name_plural': 'Транзакции',
            },
        ),
        migrations.CreateModel(
            name='TransferListing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_price', models.PositiveIntegerField(verbose_name='Стартовая цена')),
                ('buy_now_price', models.PositiveIntegerField(blank=True, null=True, verbose_name='Цена выкупа')),
                ('start_time', models.DateTimeField(auto_now_add=True, verbose_name='Время начала')),
                ('duration', models.PositiveIntegerField(verbose_name='Длительность (часы)')),
                ('bid_count', models.PositiveIntegerField(default=0, verbose_name='Количество ставок')),
                ('current_bid', models.PositiveIntegerField(blank=True, null=True, verbose_name='Текущая ставка')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Горячее предложение')),
                ('highest_bidder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='leading_bids', to=settings.AUTH_USER_MODEL, verbose_name='Лидер ставок')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TreanferMerket.player', verbose_name='Игрок')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listings', to=settings.AUTH_USER_MODEL, verbose_name='Продавец')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='TreanferMerket.listingstatus', verbose_name='Статус')),
            ],
            options={
                'verbose_name': 'Трансферное предложение',
                'verbose_name_plural': 'Трансферные предложения',
            },
        ),
        migrations.CreateModel(
            name='Bid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField(verbose_name='Сумма ставки')),
                ('bid_time', models.DateTimeField(auto_now_add=True, verbose_name='Время ставки')),
                ('bidder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Ставщик')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='TreanferMerket.bidstatus', verbose_name='Статус')),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids', to='TreanferMerket.transferlisting', verbose_name='Предложение')),
            ],
            options={
                'verbose_name': 'Ставка',
                'verbose_name_plural': 'Ставки',
            },
        ),
        migrations.CreateModel(
            name='UserSquad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название состава')),
                ('formation', models.CharField(default='4-3-3', max_length=10, verbose_name='Схема')),
                ('is_active', models.BooleanField(default=False, verbose_name='Активный состав')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='squads', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Состав пользователя',
                'verbose_name_plural': 'Составы пользователей',
            },
        ),
        migrations.CreateModel(
            name='SquadPosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position_order', models.PositiveSmallIntegerField(verbose_name='Порядок позиции')),
                ('player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='TreanferMerket.player', verbose_name='Игрок')),
                ('position_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='TreanferMerket.position', verbose_name='Тип позиции')),
                ('squad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions', to='TreanferMerket.usersquad', verbose_name='Состав')),
            ],
            options={
                'verbose_name': 'Позиция в составе',
                'verbose_name_plural': 'Позиции в составах',
            },
        ),
    ]
